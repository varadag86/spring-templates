plugins {
	id 'java'
	id 'checkstyle'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.10-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.app.postgresapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.5'
	implementation 'org.postgresql:postgresql:42.3.7'
	implementation 'org.zalando:problem:0.27.1'
	implementation 'org.zalando:jackson-datatype-problem:0.27.1'
	implementation 'org.zalando:problem-gson:0.27.1'
	implementation 'org.zalando:problem-spring-web-starter:0.27.0'
	implementation 'org.springframework.boot:spring-boot-starter-cache:3.0.4'
	testImplementation 'org.testcontainers:testcontainers:1.17.6'
	testImplementation 'org.testcontainers:postgresql:1.17.6'
	implementation 'org.testcontainers:testcontainers-bom:1.17.6'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

checkstyle {
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

checkstyleMain {
	source ='src/main/java'
}

checkstyleTest {
	source ='src/test/java'
}

tasks.withType(Checkstyle).configureEach {
	reports {
		xml.required = false
		html.required = true
		html.destination rootProject.file("build/reports/checkstyle.html")
		html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
	}
}

tasks.register('installGitHook', Copy) {
	from new File(projectDir, 'pre-commit')
	into { new File(projectDir, '.git/hooks') }
	fileMode 0777
}

assemble.dependsOn installGitHook